name: Build and Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  API_URL: ${{ secrets.API_URL }}
  PORT: ${{ secrets.API_PORT }}

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: sudo apt-get update && sudo apt-get install docker-compose -y

  run-tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - name: Run tests
      run: echo "Tests passed"

  build-and-push-ui:
    runs-on: ubuntu-latest
    needs: run-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and push UI image
      run: |
        API_URL=${{ secrets.API_URL }} docker-compose -f docker-compose.prod.yml build oboxui
        docker tag yandriievskyi/obox:ui yandriievskyi/obox:ui
        docker push yandriievskyi/obox:ui

  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: run-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and push Backend image
      run: |
        PORT=${{ secrets.API_PORT }} docker-compose -f docker-compose.prod.yml build oboxbackend
        docker tag yandriievskyi/obox:server yandriievskyi/obox:server
        docker push yandriievskyi/obox:server

  store-workflow-name:
    runs-on: ubuntu-latest
    needs: [build-and-push-ui, build-and-push-backend]
    if: success()

    steps:
    - name: Set workflow name
      id: set-workflow-name
      run: |
        BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        WORKFLOW_NAME="Build and Push - $BRANCH_NAME - $COMMIT_MESSAGE"
        echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV

    - name: Store workflow name in repository dispatch event
      run: |
        curl -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/dispatches -d '{"event_type":"store-workflow-name", "client_payload":{"workflow_name":"'"$WORKFLOW_NAME"'"}}'
