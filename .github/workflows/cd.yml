name: Continuous Deployment

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      RENDER_DEPLOY_HOOK_UI: ${{ secrets.RENDER_DEPLOY_HOOK_UI }}
      RENDER_DEPLOY_HOOK_BACKEND: ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      API_URL: ${{ secrets.API_URL }}
      PORT: ${{ secrets.API_PORT }}
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose -y

  build-and-push-ui:
    runs-on: ubuntu-latest
    needs: setup
    env:
      API_URL: ${{ secrets.API_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and push UI image
        run: |
          API_URL=${{ secrets.API_URL }} docker-compose -f docker-compose.prod.yml build oboxui
          docker tag yandriievskyi/obox:ui yandriievskyi/obox:ui
          docker push yandriievskyi/obox:ui

  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: setup
    env:
      PORT: ${{ secrets.API_PORT }}
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and push Backend image
        run: |
          PORT=${{ secrets.API_PORT }} DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }} JWT_SECRET=${{ secrets.JWT_SECRET }} REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} docker-compose -f docker-compose.prod.yml build oboxbackend
          docker tag yandriievskyi/obox:server yandriievskyi/obox:server
          docker push yandriievskyi/obox:server

  deploy-ui:
    runs-on: ubuntu-latest
    needs: build-and-push-ui

    steps:
      - name: Trigger Render deploy for UI
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_UI }}

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-push-backend

    steps:
      - name: Trigger Render deploy for Backend
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
