name: Deploy

on:
  workflow_dispatch:
    inputs:
      deploy_ui:
        description: 'Deploy UI'
        required: true
        default: 'true'
        type: boolean
      deploy_backend:
        description: 'Deploy Backend'
        required: true
        default: 'true'
        type: boolean

run-name: ${{ github.event.inputs.deploy_ui == 'true' && github.event.inputs.deploy_backend == 'false' && 'Deploy - UI' || github.event.inputs.deploy_ui == 'false' && github.event.inputs.deploy_backend == 'true' && 'Deploy - Backend' || github.event.inputs.deploy_ui == 'true' && github.event.inputs.deploy_backend == 'true' && 'Deploy - UI and Backend' }}

env:
  RENDER_DEPLOY_HOOK_UI: ${{ secrets.RENDER_DEPLOY_HOOK_UI }}
  RENDER_DEPLOY_HOOK_BACKEND: ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  fetch-build-title:
    runs-on: ubuntu-latest
    outputs:
      build-title: ${{ steps.get-build-title.outputs.build-title }}
    steps:
    - name: Get last build workflow run
      id: get-build-run
      run: |
        curl -s -H "Accept: application/vnd.github.v3+json" \
             -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             "https://api.github.com/repos/${{ github.repository }}/actions/workflows/build.yml/runs?status=success&branch=main&per_page=1" > runs.json
        cat runs.json
        RUN_ID=$(jq -r '.workflow_runs[0].id' runs.json)
        echo "RUN_ID=${RUN_ID}" >> $GITHUB_ENV

    - name: Get build workflow run title
      id: get-build-title
      run: |
        curl -s -H "Accept: application/vnd.github.v3+json" \
             -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ env.RUN_ID }}" > run.json
        BUILD_TITLE=$(jq -r '.display_title' run.json)
        echo "::set-output name=build-title::$BUILD_TITLE"

  update-run-name:
    runs-on: ubuntu-latest
    needs: fetch-build-title
    steps:
    - name: Update the deploy workflow run name
      run: |
        curl -X PATCH \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }} \
          -d "{\"name\":\"Deploy - ${{ needs.fetch-build-title.outputs.build-title }}\"}"

  deploy-ui:
    runs-on: ubuntu-latest
    needs: update-run-name
    if: github.event.inputs.deploy_ui == 'true'

    steps:
    - name: Trigger Render deploy for UI
      run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_UI }}

  deploy-backend:
    runs-on: ubuntu-latest
    needs: update-run-name
    if: github.event.inputs.deploy_backend == 'true'

    steps:
    - name: Trigger Render deploy for Backend
      run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
