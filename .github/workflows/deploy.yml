name: Deploy

on:
  workflow_dispatch:
    inputs:
      deploy_ui:
        description: "Deploy UI"
        required: true
        default: 'true'
        type: boolean
      deploy_backend:
        description: "Deploy Backend"
        required: true
        default: 'true'
        type: boolean
  repository_dispatch:
    types: [store-workflow-name]

env:
  RENDER_DEPLOY_HOOK_UI: ${{ secrets.RENDER_DEPLOY_HOOK_UI }}
  RENDER_DEPLOY_HOOK_BACKEND: ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}

jobs:
  get-last-build-name:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Get the last successful build workflow run name
      id: get-last-build-name
      run: |
        echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
        WORKFLOW_NAME=$(curl -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/actions/workflows/build-and-push.yml/runs?status=success&branch=main | jq -r '.workflow_runs[0].name')
        echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV

  update-workflow-name:
    runs-on: ubuntu-latest
    needs: get-last-build-name
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Update the deploy workflow run name
      run: |
        curl -X PATCH \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }} \
          -d "{\"name\":\"Deploy - $WORKFLOW_NAME\"}"

  deploy-ui:
    runs-on: ubuntu-latest
    needs: [get-last-build-name, update-workflow-name]
    if: github.event.inputs.deploy_ui == 'true'

    steps:
    - name: Trigger Render deploy for UI
      run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_UI }}

  deploy-backend:
    runs-on: ubuntu-latest
    needs: [get-last-build-name, update-workflow-name]
    if: github.event.inputs.deploy_backend == 'true'

    steps:
    - name: Trigger Render deploy for Backend
      run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
