name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_ui:
        description: "Deploy UI"
        required: true
        default: true
        type: boolean
      deploy_backend:
        description: "Deploy Backend"
        required: true
        default: true
        type: boolean

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  RENDER_DEPLOY_HOOK_UI: ${{ secrets.RENDER_DEPLOY_HOOK_UI }}
  RENDER_DEPLOY_HOOK_BACKEND: ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
  API_URL: ${{ secrets.API_URL }}
  PORT: ${{ secrets.API_PORT }}

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: sudo apt-get update && sudo apt-get install docker-compose -y

  run-tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - name: Run tests
      run: echo "Tests passed"

  build-and-push-ui:
    runs-on: ubuntu-latest
    needs: run-tests
    if: github.event.inputs.deploy_ui == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and push UI image
      run: |
        API_URL=${{ secrets.API_URL }} docker-compose -f docker-compose.prod.yml build oboxui
        docker tag yandriievskyi/obox:ui yandriievskyi/obox:ui
        docker push yandriievskyi/obox:ui

  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: run-tests
    if: github.event.inputs.deploy_backend == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and push Backend image
      run: |
        PORT=${{ secrets.API_PORT }} docker-compose -f docker-compose.prod.yml build oboxbackend
        docker tag yandriievskyi/obox:server yandriievskyi/obox:server
        docker push yandriievskyi/obox:server

  deploy-ui:
    runs-on: ubuntu-latest
    needs: build-and-push-ui
    if: github.event.inputs.deploy_ui == 'true'

    steps:
    - name: Trigger Render deploy for UI
      run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_UI }}

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-push-backend
    if: github.event.inputs.deploy_backend == 'true'

    steps:
    - name: Trigger Render deploy for Backend
      run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
